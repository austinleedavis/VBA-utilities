Attribute VB_Name = "Random"
Option Explicit

' This Class extends the functionality of the built-in Rnd function by
' providing functions for generating pseudorandom strings, integers, Longs, etc.
'
' Warning: If you don't call the Randomize function before calling these
' functions, they may return the same sequence of pseudorandom numbers across
' multiple function calls

' the array of characters from which the NextString method will select characters unless an alternative string of characters is supplied
Private Const CHAR_ARR As String = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"

' The length of the CHAR_ARR constant
Private Const LEN_CHAR_ARR As Integer = 62

' The value of PI
Private Const PI As Double = 3.14159265358979

' The most recent string returned by the NextString method; can be accessed via the LastString method
Private LastStringValue As String

' The most recent Boolean value returned by the NextBoolean method; can be accessed via the LastBoolean method
Private LastBoolValue As Boolean

' The most recent Long value returned by the NextLong method; can be accessed via the LastLong method
Private LastLongValue As Long

' @description Equivalent to the VBA Randomize method. Resets the seed of the pseudorandom number generator.
' @param seed Optional. a numeric seed that will be used by the RND function to generate a pseudorandom number. If no seed value is provided, the system timer as the seed value for the RND function.
Public Sub setSeed(Optional seed As Long)
    If (seed Is Nothing) Then
        Randomize
    Else
        Rnd (-1) ' This must be called
        Randomize (seed)
    End
End Sub


' @description Generates a randomized string of characters. A new pseudorandom string is generated with each call to the NextString method, and the value is cached in a persistent variable. The last value can be accessed after-the-fact using the {@ref LastString} method.
' @param length Optional. The desired length of the resulting string. If no value is provided, the default length of eight (8) is used.
' @param characters Optional. A string from which characters will be selected at random. If not provided, a pseudorandom string will be generated using characters 0-9, A-z
Public Function NextString(Optional length As Long = 8, Optional characters As String = CHAR_ARR) As String

    Dim s As String
    s = Space(length)
    Dim charLen As Long
    charLen = Len(characters) - 1
    Dim N As Long
    Dim nl As Long
    For N = 1 To length 'don't hardcode the length twice
        nl = NextLong(1, charLen)
        Mid(s, N, 1) = Mid(characters, nl, 1) 'bit more efficient than concatenation
    Next

    LastStringValue = s
    NextString = s

End Function

'@description Returns the last pseudorandom string generated by the {@ref NextString} method
'@return the last pseudorandom string generated by the NextString method. If the NextString method has not been called, returns the empty String ""
Public Function LastString() As String
    LastString = LastStringValue
End Function

'@description Returns a pseudorandom Long value within the specified bounds. Formally, given a lower bound L and upper bound U, returns a random value x, such that L<=x<=U. A new random number is returned after each call to this method. The most recently returned value can be retrieved after-the-fact usign the {@ref LastLong} method
'@param LowerBound Optional. The smallest Long value returned by the function. If no value is specified, 0 is used as the lower bound.
'@param UpperBound Optional. The largest Long value returned by the function. If no value is specified, the maximum Long value (i.e. 2,147,483,647) is used as the upper bound.
'@return Returns
Public Function NextLong(Optional LowerBound As Long = 0, Optional UpperBound As Long = 2147483647) As Long
    NextLong = (UpperBound - LowerBound + 1) * Rnd + LowerBound
    LastLongValue = NextLong
End Function

'@description Returns the last pseudorandom Long generated by the {@ref NextLong} method
'@return the last pseudorandom Long generated by the {@ref NextLong} method. If the NextLong method has not been called, returns 0.
Public Function LastLong() As Long
    LastLong = LastLongValue
End Function

'@description Used to get a pseudorandom, uniformly distributed boolean value. The likelihood of receiving a TRUE value can be adjusted parametrically, but by default TRUE appears 50% of the time.  A new random Boolean is returned after each call to this method. The most recently returned value can be retrieved after-the-fact usign the {@ref LastBoolean} method
'@param trueFrequency Optional. The likelihood (probability) of receiving a TRUE value. If not specified, the function assumes a 50% likelihood.
'@return Returns a Boolean value with the likelihood of the value being TRUE equal to the trueFrequency parameter
Public Function NextBoolean(Optional trueFrequency As Double = 0.5) As Boolean
    NextBoolean = IIf(Rnd() < trueFrequency, True, False)
End Function

'@description Returns the last pseudorandom Boolean generated by the {@ref NextBoolean} method
'@return the last pseudorandom Boolean generated by the {@ref NextBoolean} method. If the NextBoolean method has not been called, returns FALSE.
Public Function LastBoolean(Optional trueFrequency As Double = 0.5) As Boolean
    LastBoolean = LastBoolValue
End Function

'@description returns the probability that the observed value of a normal random variable with given mean and standard deviation will be less than or equal to x.
'@param x The observed value
'@param mean Optional. The mean of the normal random variable. If no value is given, a mean of 0 is used.
'@param standard_dev the standard deviation of the normal random variable. If no value is given, a standard deviation of 1 is used.
'@return Returns the probability that the observed value x would be drawn from a normal random variable with the given mean and standard deviation
Public Function NormDistVBA(X As Double, Optional mean As Double = 0, Optional standard_dev As Double = 1) As Double
    Dim expNum As Double, expDenom As Double, denom As Double
    expNum = -((X - mean) * (X - mean))
    expDenom = 2 * standard_dev * standard_dev
    denom = standard_dev * Sqr(2 * PI)
    NormDistVBA = (1 / denom) * Exp(expNum / expDenom)
End Function











